# -- general
set -g default-terminal 'xterm-256color'
set -ga terminal-overrides ',xterm-256color:RGB'
setw -g xterm-keys on
set -s escape-time 0
set -sg repeat-time 300
set -s focus-events on
set -g mouse on
set -sg exit-empty on

set -q -g status-utf8 on
setw -q -g utf8 on

set -g history-limit 10000

# -- prefix
set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

# -- display

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g visual-activity off
setw -g monitor-activity off
setw -g monitor-bell off

# -- navigation

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind - split-window -v
# split current window vertically
bind | split-window -h

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# toggle mouse
bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"


# -- urlview
bind U run "cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}"


# -- buffers
bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# -- theme
black='colour16'
white='colour255'
gray='colour236'
dark_gray='colour236'
yellow='colour215'
light_purple='colour141'
dark_purple='colour61'

# Icons
left_sep=''
right_sep=''
right_alt_sep=''

set-option -g status on
set -g status-justify 'centre'
set-option -g status-left-length 100
set-option -g status-right-length 100
set-option -g status-bg "${dark_gray}"
set-option -g pane-active-border-style "fg=${light_purple}"
set-option -g status-left " #I #[fg=${dark_gray},reverse]${right_sep} "
set-option -g status-left-style "fg=${white},bg=${dark_purple},bold"
set-option -g status-right "${left_sep}#[bg=${black},reverse] %Y-%m-%d %H:%M "
set-option -g status-right-style "fg=${light_purple},bg=${dark_gray}"
set-window-option -g window-status-activity-style "fg=${white},bg=${gray}"
set-window-option -g window-status-separator ''
set-window-option -g window-status-format ' #I #W '
set-window-option -g window-status-style "fg=${yellow},bg=${dark_gray}"
set-window-option -g window-status-current-format \
  "${right_sep}#[fg=${black}] #I ${right_alt_sep} #W #[fg=${dark_gray},reverse]${right_sep}"
set-window-option -g window-status-current-style "fg=${dark_gray},bg=${light_purple}"

# -- Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# tmux-resurrect
set -g @resurrect-save-bash-history 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
# set -g @resurrect-save 'S'
# set -g @resurrect-restore 'R'

# Automatic tpm installation
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
